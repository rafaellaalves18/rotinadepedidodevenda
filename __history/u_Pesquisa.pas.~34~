unit u_Pesquisa;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, dxStatusBar, Data.DB, Vcl.StdCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.Buttons, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;



type
  TFrmPesquisa = class(TForm)
    dxStatusBar1: TdxStatusBar;
    gridItens: TDBGrid;
    EdProcura: TEdit;
    btnpesquisar: TBitBtn;
    qrSQL: TFDQuery;
    Panel1: TPanel;
    dsconsulta: TDataSource;
    BitBtn1: TBitBtn;
    DsLK: TDataSource;
    procedure btnpesquisarClick(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);



  private
    { Private declarations }
    cCampos, cCampoRetorno, cTabela : string;
  public
    { Public declarations }
    iColunaPesquisar : Integer;
    GSqlFiltro,  GSqlCampos : string;
    GFiltraTabela: boolean;

  end;



var
  Tabela,Coluna, GTabela, GSqlFiltroPersistente: String;
  FrmPesquisa: TFrmPesquisa;
  Query  : TFDQuery;
  GCamposChave : array[0..8] of String;

implementation




{$R *.dfm}

uses u_DMBancodeDados;

procedure TFrmPesquisa.BitBtn1Click(Sender: TObject);
var
  i, k : integer;
begin
   If (DsLK.DataSet.RecordCount > 0) then
      begin
         i := 0;
         while i < 9 do
               begin
                  for k := DsLK.DataSet.FieldCount-1 downto 0  do
                      if UpperCase(DsLK.DataSet.Fields.Fields[K].FieldName) = UpperCase(GCamposChave[i]) then
                         GCamposChave[i] := DsLK.DataSet.FieldByName(GCamposChave[i]).AsString
                      ;
                  ;
                  Inc(i);
               end
         ;
      end
   ;
   If DsLK.DataSet.RecordCount <> 0 then
      FrmPesquisa.Close
   else
      abort
   ;

end;



procedure TFrmPesquisa.btnpesquisarClick(Sender: TObject);
var
   i : Integer;
   coluna_original : String;
begin

        GSqlFiltro  := 'where ';
         i := pos('WHERE',UpperCase(GSqlFiltroPersistente));
         if i = 1 then
            delete(GSqlFiltroPersistente, i, 5);


         If Length(Trim(GSqlFiltroPersistente)) > 0 then
            GSqlFiltro := GSqlFiltro + GSqlFiltroPersistente + ' and ';

         coluna_original := Coluna;
         if (GFiltraTabela) and (Tabela <> '') then
            Coluna := Tabela+'.'+Coluna;

       {  if (trim(EdProcura.Text) = '%') THEN
            GSqlFiltro := GSqlFiltro + 'upper((' + (Coluna) + '))' + ' like upper('
         else
            GSqlFiltro := GSqlFiltro +Coluna + '='  ;

         If (trim(EdProcura.Text) = '%') then
            GSqlFiltro := GSqlFiltro + EdProcura.Text + '%' + ')'
         else
            GSqlFiltro := GSqlFiltro + quotedStr(FormatDateTime('dd/mmm/yy',StrToDate(EdProcura.Text))) ;
                }
         if (Length(Trim(GSqlCampos)) = 0) then
            GSqlCampos := '*';



         Query.Sql.Clear;
        Query.Sql.Add('select ' + GSqlCampos  + ' from ' + GTabela + ' ' + GSqlFiltro  );

     Query.close;
     Query.open;

         DsLK.DataSet.Last;
         DsLK.DataSet.First;
         Query.Last;
         Query.First;
         if Query.RecordCount > 0 then
            gridItens.SetFocus
         else
            EdProcura.SetFocus;

end;

constructor TFrmPesquisa.Create(AOwner : TComponent; par_lstCampos : Array of string;par_cTabela, par_cCampoResult :string);
begin


end;

procedure TFrmPesquisa.FormActivate(Sender: TObject);
begin
(DsLK.DataSet as TFDQuery).Cancel;
  (DsLK.DataSet as TFDQuery).First;
  Coluna             := DsLK.DataSet.Fields[iColunaPesquisar].FieldName;
  Tabela := (dsLK.DataSet as TFDQuery).FieldList.Fields[iColunaPesquisar].Origin;

Query:=TFDQuery.Create(nil);
Query.Connection := dMBancodeDados.conexao;

end;

end.
procedure TFrmPesquisa.FormActivate(Sender: TObject);
begin

end;


